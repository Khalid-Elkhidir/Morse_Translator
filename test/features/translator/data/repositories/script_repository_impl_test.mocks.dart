// Mocks generated by Mockito 5.1.0 from annotations
// in translator/test/features/translator/data/repositories/script_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:translator/features/translator/data/data_sources/script_data_source.dart'
    as _i3;
import 'package:translator/features/translator/data/models/script_model.dart'
    as _i2;
import 'package:translator/features/translator/domain/entities/script.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeScriptModel_0 extends _i1.Fake implements _i2.ScriptModel {}

/// A class which mocks [ScriptDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockScriptDataSource extends _i1.Mock implements _i3.ScriptDataSource {
  MockScriptDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ScriptModel> convertToMorse(_i5.Script? script) =>
      (super.noSuchMethod(Invocation.method(#convertToMorse, [script]),
              returnValue: Future<_i2.ScriptModel>.value(_FakeScriptModel_0()))
          as _i4.Future<_i2.ScriptModel>);
  @override
  _i4.Future<_i2.ScriptModel> convertToEnglish(_i5.Script? script) =>
      (super.noSuchMethod(Invocation.method(#convertToEnglish, [script]),
              returnValue: Future<_i2.ScriptModel>.value(_FakeScriptModel_0()))
          as _i4.Future<_i2.ScriptModel>);
}
